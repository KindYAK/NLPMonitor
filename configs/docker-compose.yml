version: '3'

services:
  web:
    env_file:
      - ../.env
    expose:
      - 8000
    depends_on:
      - db
      - redis
      - elasticsearch
    networks:
      - network
    restart: always
  nginx:
    image: "nginx:1.17.0"
    ports:
      - "80:80"
    volumes:
      - static_root:/static_root
      - media_root:/media_root
    depends_on:
      - web
    networks:
      - network
    restart: always
  db:
    image: "postgres:11.4"
    expose:
      - 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ../db_backup:/backup
      - ./db_backup.sh:/bin/db_backup.sh
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGPASSWORD=${DB_PASSWORD}
    networks:
      - network
    command: postgres -c 'max_connections=9000'
    restart: always
  elasticsearch:
    image: "elasticsearch:7.3.1"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      - cluster.name="elk-nlpmonitor-cluster"
      - network.host=0.0.0.0
      - discovery.type=single-node
      - discovery.zen.minimum_master_nodes=1
      - ${ELASTIC_JAVA_OPTIONS}
    networks:
      - network
    restart: always
  kibana:
    image: "kibana:7.3.1"
    ports:
      - "5601:5601"
    environment:
      - server.name="kibana"
      - server.host="0"
      - elasticsearch.url=http://elasticsearch:9200
      - SERVER_BASEPATH=${KIBANA_PRIVATE_PATH}
      - SERVER_REWRITEBASEPATH=true
    depends_on:
      - elasticsearch
    networks:
      - network
    restart: always
  redis:
    image: "redis:5.0.5"
    networks:
      - network
    restart: always

volumes:
  django_root:
    driver: local
  pgdata:
    driver: local
  elasticsearch_data:
    driver: local
  redis:
    driver: local
  media_root:
    driver: local
  static_root:
    driver: local

networks:
  network:
    driver: bridge
